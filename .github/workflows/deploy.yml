name: Deploy on Tag to VPS1
on:
  push:
    branches:
      - main
jobs:
  workflow:
    runs-on: ubuntu-latest
    env:
      PERSISTENT: /tmp/persistent
      FILENAME: ${{ github.sha }}
      REPO: ${{ github.event.repository.name }}

      DO_IP: ${{ secrets.DO_VPS1_SSH_IP }}
      DO_SSH: ${{ secrets.DO_VPS1_SSH_USER }}@${{ secrets.DO_VPS1_SSH_IP }}

      DO_WORKDIR: services/${{ github.event.repository.name }}
      DO_PERSISTENT: services/${{ github.event.repository.name }}/persistent
      DO_BUILDS: services/${{ github.event.repository.name }}/builds

      TOTP_SECRET: ${{ secrets.TOTP_SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "23.1.0"

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DO_VPS1_SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: ssh-keyscan -H $DO_IP >> ~/.ssh/known_hosts

      - name: Initialize directories
        run: |
          mkdir -p $PERSISTENT
          ssh $DO_SSH <<EOF
            mkdir -p $DO_PERSISTENT
            mkdir -p $DO_BUILDS
          EOF

      - name: Download latest data
        run: scp -r $DO_SSH:$DO_PERSISTENT/* $PERSISTENT

      - name: Build
        run: |
          npm i
          npm run build
          npm i -g clean-modules
          npm ci --omit=dev
          clean-modules -y

      - name: Upload
        run: |
          echo 'PERSISTENT='$DO_PERSISTENT >> .env
          echo 'TOTP_SECRET='$TOTP_SECRET >> .env
          tar -czf $FILENAME.tar.gz package.json package-lock.json next.config.ts .env .next/ node_modules/ &&
          scp -r $FILENAME.tar.gz $DO_SSH:$DO_BUILDS

      - name: Deploy
        run: |
          ssh $DO_SSH <<EOF
            cd $DO_WORKDIR
            pm2 stop $REPO || true
            find . \
              -mindepth 1 \
              -regextype egrep \
              -not -regex '^\.\/(persistent|builds)($|/.*)' \
              -exec rm -rf {} +
            tar -xzf ./builds/$FILENAME.tar.gz
            pm2 start $REPO || pm2 --name $REPO start npm --start && pm2 save
          EOF
